@implements IDisposable

@using Autowatchers.BlazorWasm.Watchers

<PageTitle>Counter</PageTitle>

<h1>Counter</h1>

<p role="status">Current count of component: <span id="ComponentCurrentValue">@CountWatcher.CurrentValue</span></p>

@if (CountIsAtLimit)
{
    <p id="ComponentCountIsAtLimit">The count of component is 10</p>
}

@if (CountIsAboveLimit)
{
    <p id="ComponentCountIsAboveLimit">The count of component is above 10</p>
}

<button class="btn btn-primary" id="ComponentButton" @onclick="IncrementCount">Click me</button>

@code {
    bool CountIsAtLimit { get; set; }
    bool CountIsAboveLimit { get; set; }

    AutoGeneratedCountWatcher CountWatcher { get; set; } = default!;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        CountWatcher = new AutoGeneratedCountWatcher(new CounterVm());

        CountWatcher.CurrentValueChanged += CountChanged;

    }

    private void CountChanged(int old, int _new)
    {
        CountIsAtLimit = _new == CounterVm.CounterLimit;
        CountIsAboveLimit = _new > CounterVm.CounterLimit;
    }

    public void IncrementCount()
    {
        CountWatcher.CurrentValue += 1;
    }

    public void Dispose()
    {
        CountWatcher.CurrentValueChanged -= CountChanged;

    }

}